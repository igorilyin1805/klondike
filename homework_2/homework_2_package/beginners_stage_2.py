# pylint: skip-file
'''
В этом домашнем задании задачи уже сложнее, чем были до этого. Поэтому важно не просто написать алгоритм, а предусмотреть все возможные случаи. Поэтому рекомендую писать модульные тесты (assert-ы).
✅ Если вы задействуете библиотеку pytest и напишете тесты в отдельном модуле (файле), то потренируете важные концепции, которые вам пригодятся в дальнейшем, когда мы будем программировать целые проекты.
✅ В минимуме, задачи можно решить с помощью простейших конструкций Python: list.append, for, if, else и т.п. Но Python может больше.
✅Поэтому настоятельно рекомендую применять списковые включения (list comprehension) вместо append в список в цикле. Также изучите if в списковом включении, например, [x for x in lst if x > 0]
✅В Python есть очень удобные функции: all, any, sum, filter, map, sorted, zip. В них необходимо разобраться. Они сильно ускоряют написание кода.
✅Необходимо применить эти функции при решении этого домашнего задания. В этом смысл этого домашнего задания.
✅Настоятельно рекомендую перерешать предыдущее домашнее задание с использованием вышеописанных функций. Сравните код со старым и почувствуйте разницу.
✅Обратите внимание на аннотации типов. На текущем шаге их можно не использовать, но в дальнейшем их следует применять.
'''



"""
    Нужно реализовать надпись в формате "N просмотров". Падеж слова "просмотр" зависит
    от числа N. Например, 1 просмотр, 2 просмотра и т.п.
"""


def get_views_count(n: int) -> str:
    return ""


"""
    Дан список, содержащий нули. Вернуть список, где все нули сдвинты вправо,
    сохранив порядок исходного списка:
    move_zeros([1, 0, 0, 2, 3, 0, 1]) -> [1, 2, 3, 1, 0, 0, 0]

    Решить в двух вариантах:
    - функция принимаем список и возвращает НОВЫЙ список
    - функция изменяет список, который был передан в аргументе функции 
    (функция ничего не возвращает)
"""


def move_zeros(lst: list[float]) -> list:
    return lst


"""
    Данные загрузились из БД с лишними символами, а должны быть только русские буквы.
    Напишите функцию, которая удаляет символы, которые не являются русскими буквами.
    "Иsвtrан Ив^%ан Ива?но)вич" -> "Иванов Иван Иванович"
"""


def clean_name(fio: str) -> str:
    return ""


"""
    Дан массив цен акций, вывести список, содержащий темпы прироста от периода к периоду.
    Для первого элемента списка выведите значение None. Округлите до целых.
    Например: [100, 150, 300, 400] -> [None, 50%, 100%, 3   3%]
"""


def get_pct_growth(s: list[float]) -> list[float]:
    return []
